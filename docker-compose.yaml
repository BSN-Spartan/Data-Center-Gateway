version: '3.2'

networks:
  kong-net:
    external: false

services:
  kong-migrations:
    image: kong:2.8.3-ubuntu
    command: kong migrations bootstrap
    depends_on:
      - db
    environment:
      KONG_DATABASE: postgres
      KONG_PG_DATABASE: kong
      KONG_PG_HOST: db
      KONG_PG_USER: kong
      KONG_PG_PASSWORD: kong
    networks:
      - kong-net
    restart: on-failure
    deploy:
      restart_policy:
        condition: on-failure

  kong-migrations-up:
    image: kong:2.8.3-ubuntu
    command: kong migrations up && kong migrations finish
    depends_on:
      - db
    environment:
      KONG_DATABASE: postgres
      KONG_PG_DATABASE: kong
      KONG_PG_HOST: db
      KONG_PG_USER: kong
      KONG_PG_PASSWORD: kong
    networks:
      - kong-net
    restart: on-failure
    deploy:
      restart_policy:
        condition: on-failure

  kong:
    image: kong:2.8.3-ubuntu
    container_name: super-kong
    user: kong
    depends_on:
      - db
    environment:
      KONG_LOG_LEVEL: info
      KONG_PROXY_LISTEN: 0.0.0.0:18601 reuseport backlog=16384, 0.0.0.0:18602 ssl reuseport backlog=16384, 0.0.0.0:18603 http2 ssl reuseport backlog=16384, 0.0.0.0:18605 http2 reuseport backlog=16384
      KONG_STREAM_LISTEN: 0.0.0.0:18604 reuseport backlog=16384, 0.0.0.0:18606 ssl reuseport backlog=16384
      KONG_STATUS_LISTEN: 0.0.0.0:18607
      KONG_ADMIN_LISTEN: 0.0.0.0:8001
      KONG_CASSANDRA_CONTACT_POINTS: db
      KONG_DATABASE: postgres
      KONG_PG_DATABASE: kong
      KONG_PG_HOST: db
      KONG_PG_USER: kong
      KONG_PG_PASSWORD: kong
    entrypoint: /usr/local/kong/start.sh
    privileged: true
    networks:
      - kong-net
    ports:
      - "18601:18601"
      - "8001:8001/tcp"
      - "18602:18602"
      - "127.0.0.1:8444:8444/tcp"
      - "18603:18603"
      - "18604:18604"
      - "18605:18605/tcp"
      - "18606:18606/tcp"
      - "18607:18607"
    healthcheck:
      test: ["CMD", "kong", "health"]
      interval: 10s
      timeout: 10s
      retries: 10
    restart: on-failure
    deploy:
      restart_policy:
        condition: on-failure
    volumes:
      - $PWD/kong/conf/start.sh:/usr/local/kong/start.sh
      - $PWD/kong/conf/kong.conf:/usr/local/kong/kong.conf
      - $PWD/kong/conf/kong.yaml:/usr/local/kong/kong.yaml
      - $PWD/kong/plugins/deck:/usr/bin/deck
      - $PWD/kong/plugins/access-key-auth-with-http:/usr/local/share/lua/5.1/kong/plugins/access-key-auth-with-http
      - $PWD/kong/plugins/access-key-auth-with-grpc:/usr/local/share/lua/5.1/kong/plugins/access-key-auth-with-grpc
      - $PWD/kong/logs:/usr/local/kong/logs
      - /etc/localtime:/etc/localtime
      - $PWD/kong/conf/nginx_kong.lua:/usr/local/share/lua/5.1/kong/templates/nginx_kong.lua
      - $PWD/kong/conf/nginx_kong_stream.lua:/usr/local/share/lua/5.1/kong/templates/nginx_kong_stream.lua

  db:
    image: postgres:9.5
    container_name: super-kong-db
    environment:
      POSTGRES_DB: kong
      POSTGRES_USER: kong
      POSTGRES_PASSWORD: kong
    healthcheck:
      test: ["CMD", "pg_isready", "-U", "kong"]
      interval: 30s
      timeout: 30s
      retries: 3
    restart: on-failure
    deploy:
      restart_policy:
        condition: on-failure
    stdin_open: true
    tty: true
    networks:
      - kong-net
    volumes:
      - $PWD/kong/postgres:/var/lib/postgresql/data
    ports:
      - "5432:5432"

  konga-prepare:
    image: pantsel/konga:latest
    command: "-c prepare -a postgres -u postgresql://kong:kong@db:5432/konga"
    networks:
      - kong-net
    restart: on-failure
    environment:
      KONG_DATABASE: postgres
      KONG_PG_HOST: db
      KONG_PG_DATABASE: konga
      KONG_PG_PASSWORD: kong
    links:
      - db
    depends_on:
      - db
 
  konga:
    image: pantsel/konga:latest
    container_name: super-kong-konga
    restart: always
    networks:
     - kong-net
    environment:
      DB_USER: kong
      DB_ADAPTER: postgres
      DB_PASSWORD: kong
      DB_DATABASE: konga
      DB_URI: postgresql://kong:kong@db:5432/konga
      NODE_ENV: production
    links:
      - db
    depends_on:
      - kong
      - konga-prepare
    ports:
      - "1337:1337"
      
  super-kong-service:
    image: ubuntu:20.04
    container_name: super-kong-service
    restart: always
    networks:
     - kong-net
    volumes: 
      - ./super-kong-service:/super-kong-service
      - /etc/localtime:/etc/localtime
    working_dir: /super-kong-service
    environment: 
      - GIN_MODE=release
    command: ./super-kong-service
    ports:
      - "18899:18899"
